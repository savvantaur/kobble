- name ||= listed.name
- name = "nameless #{listed.nice_title}" if name.blank?
- collection = listed.is_a?(Collection) ? listed : listed.collection
- collection_name = collection.name if collection
- addendum ||= false
- idprefix ||= 'listed'
- linker ||= nil

- inactive ||= listed.deleted? || listed.new_record?
- type_class = listed.is_a?(Source) ? [listed.file_type] : [listed.class.to_s.downcase]
- status_class ||= 'listed'

- liclasses = [status_class]
- liclasses << 'problematic' if listed.has_warnings?

- aclasses = [type_class]
- aclasses << 'draggable' unless inactive
- aclasses << 'catcher' unless inactive

- aid = []
- aid << idprefix if idprefix
- if listed.has_collection?
  - aid << 'collections'
  - aid << listed.collection.id
- aid << listed.class.to_s.downcase
- aid << listed.id

- if linker
  - liid = [linker.class.to_s.downcase, linker.id].join('_')

%li{:class => liclasses.join(' '), :id => liid}
  = link_to name, collected_url_for(listed), :id => aid.join('_'), :class => aclasses.join(' '), :title => "#{listed.nice_title}: #{listed.name}", :catches => (listed.catchlist unless inactive)
  = render :partial => 'shared/note_flags', :locals => {:item => listed}
  %span{:class => "listnote"}
    - if addendum
      = addendum
    - else
      = render_if_possible :partial => "#{listed.class.to_s.downcase.pluralize}/list_notes", :locals => {:listed => listed}
  %br
  = truncate( listed.find_some_text, 200 )
